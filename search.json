[
  {
    "objectID": "qss-code-authors.html",
    "href": "qss-code-authors.html",
    "title": "Code Contribution and Authorship",
    "section": "",
    "text": "may be interesting / useful: https://doi.org/10.1145/1772690.1772766"
  },
  {
    "objectID": "qss-code-authors.html#linking-scientific-articles-and-source-code-repositories",
    "href": "qss-code-authors.html#linking-scientific-articles-and-source-code-repositories",
    "title": "Code Contribution and Authorship",
    "section": "4.1 Linking Scientific Articles and Source Code Repositories",
    "text": "4.1 Linking Scientific Articles and Source Code Repositories\n\nModern scientific research increasingly requires the public sharing of research code, creating unique opportunities to study the relationship between academic authorship and software development.\n\nmany journals and platforms now require or recommend code and data sharing (Stodden, Guo, and Ma 2013; Sharma et al. 2024)\nthis requirement creates traceable links between publications and code\nthese links enable systematic study of both article-repository and author-developer relationships (Hata et al. 2021; Kelley and Garijo 2021; Stankovski and Garijo 2024; Milewicz, Pinto, and Rodeghero 2019)\n\nOur data collection process leverages multiple complementary sources of linked scientific articles and code repositories to ensure comprehensive coverage.\n\nPLOS: Traditional research articles with code requirements\nJOSS and SoftwareX: Specialized software-focused publications\nPapers with Code / ArXiv: Capturing pre-print landscape\nto reduce the complexity of dataset processing and enrichment, we filter out any article-source-code-repository pairs which store code somewhere other than GitHub, note: we do this for simplicity of processing but recognize that there is work elsewhere to understand code outside of GitHub (Trujillo, Hébert-Dufresne, and Bagrow 2022)\n\nThrough integration of multiple data sources, we extract detailed information about both the academic and software development aspects of each project.\n\nspecifically we utilize the Semantic Scholar API for article DOI resolution to ensure that we find the latest version for each article.\nthis is particularly important for working with preprints as they may have been published in a journal since their inclusion in the Papers with Code dataset\nwe then utilize the OpenAlex API to gather publication metadata (i.e. open access status, domain, publication date), author details (i.e. name, author position, corresponding author status), and article- and individual-level metrics (i.e. citation count, FWCI, h-index).\nthe GitHub API provides similar information for source code repositories, including repository metadata (i.e. name, description, languages, creation date), contributor details (i.e. username, name, email), and repository-level metrics (i.e. star count, fork count, issue count).\n\nwhile the majority of our data is sourced from Papers with Code, our additional collection from PLOS, JOSS, and SoftwareX as well as the enrichment from GitHub and OpenAlex together form one of the largest collections of linked, metadata enriched, datasets of paired scientific articles and associated source code repositories.\n\nin total, we collect and enrich data for 163292 article-repository pairs"
  },
  {
    "objectID": "qss-code-authors.html#a-predictive-model-for-matching-article-authors-and-source-code-contributors",
    "href": "qss-code-authors.html#a-predictive-model-for-matching-article-authors-and-source-code-contributors",
    "title": "Code Contribution and Authorship",
    "section": "4.2 A Predictive Model for Matching Article Authors and Source Code Contributors",
    "text": "4.2 A Predictive Model for Matching Article Authors and Source Code Contributors\n\n4.2.1 Annotated Dataset Creation\n\nThe development of an accurate author-developer matching model requires high-quality labeled training data that captures the complexity of real-world identity matching.\n\nentity matching between authors and developers is non-trivial\nmultiple forms of name variation and incomplete information\nadd figure showing example matches/non-matches\n\nWe developed an annotation process to create a robust training dataset while maximizing efficiency and accuracy.\n\nfocus on JOSS articles to increase positive match density\nwe create author-developer pairs for annotation by creating all possible combinations of authors and developers within a single JOSS article-repository pair\nwe take a random sample of 3000 pairs from the full set and have two independent annotators label each\nafter all 3000 pairs are annotated, we resolve any disagreements between the two annotators\n\nThe resulting annotated dataset provides a comprehensive foundation for training our predictive model while highlighting common patterns in author-developer identity matching.\n\nafter resolution of all annotated pairs, our annotated dataset contains 451 (15.0%) positive and 2548 (85.0%) negative author-developer-account pairs\nthere are 2027 unique authors and 2733 unique developer accounts within this annotated set\nhowever, not all developer accounts contain complete information, in our set 2191 (80.2%) have associated names and 839 (30.7%) have associated emails\n\n\n\n\n4.2.2 Training and Evaluation\n\nTo optimize our predictive model for author-contributor matching, we evaluate a variety of Transformer-based base models and input features.\n\nspecifically, we fine-tune from three different base transformer models:\n\ndeberta-v3-base (He, Gao, and Chen 2021; He et al. 2021)\nbert-base-multilingual-cased (Devlin et al. 2018)\ndistilbert-base-uncased (Sanh et al. 2019)\n\nthese three models are all variations or built-upon BERT, and while significant time has passed since BERT was first introduced, BERT-based models remain a strong base for many NLP tasks across a number of domains while being relatively “small” compared to the much larger decoder transformer relatives (GPT, Llama, etc.) (Tran et al. 2024; Yu et al. 2024; Jeong and Kim 2022)\n\nWe employed a systematic evaluation to identify optimal combination of base models and input features.\n\nfirst, to ensure that there was no data leakage, we split our dataset into training and test sets\nspecifically, we created two random sets of 10% of all unique authors and 10% of all unique developers, any pairs containing either the author or developer were placed into the test set\nin doing so, we ensured that the model was never trained on any author or developer information later used for evaluation\ndue to the fact that each author and developer-account can be included in multiple annotated pairs, our final training set contains 2442 (81.4%) and our test set contains 557 (18.6%) author-developer-account pairs\nwe fine-tuned each of our three base models using all combinations of available developer-account features, from including only the developer account username to including the developer’s username, name, and email.\nto avoid overfitting and ensure generalizability, we fine-tuned each of the base models for only a single training epoch.\nmodel evaluation was performed using standard classification metrics, including accuracy, precision, recall, and F1 score\n\nAfter extensive model comparison we find that fine-tuning from Microsoft’s deberta-v3-base and including the developer’s username and name achieves the best performance for author-developer matching.\n\nour best model achieves a binary F1 score of 0.944, with an accuracy of 0.984, precision of 0.938, and recall of 0.95 (see Figure 1 for a confusion matrix of model predictions on the test set).\nanalysis of feature importance\n\nnote that the addition of developer’s name has a “larger effect” on model performance but that could simply be because of how many more developers have a name available than an email\nalso note that there is a model that performs just as well as this one using bert-multilingual and includes the developers email however we choose to use the deberta and name only version for its simplicity as well as the fact that deberta is a much more recently developed and released model which was pre-trained on a much larger dataset.\nconsidering that in most cases, deberta out-performs bert-multilingual, we believe that while the overall evaluation metrics between the top two performing models are the same, the deberta based model will generalize to other unseen data better than the bert-multilingual model\n\nall model and feature set combination results are available in Table 4\n\n\n\n\n\n\n\n\n\n\nFigure 1: Confusion Matrix Produced From Evaluation of Best Performing Model (deberta-v3 with developer username, developer name, and author name).\n\n\n\n\n\n\nTo enable future research, we have made our trained model and supporting application library publicly available.\n\nPython library implementation: sci-soft-models\nHuggingFace model deployment: dev-author-em-clf"
  },
  {
    "objectID": "qss-code-authors.html#linking-authors-and-github-developer-accounts",
    "href": "qss-code-authors.html#linking-authors-and-github-developer-accounts",
    "title": "Code Contribution and Authorship",
    "section": "4.3 Linking Authors and GitHub Developer Accounts",
    "text": "4.3 Linking Authors and GitHub Developer Accounts\n\nOur trained entity-matching model enables comprehensive identification of author-developer relationships while accounting for the complex realities of academic software development practices.\n\nin practice, to fill out our dataset, we apply our trained model to all possible author and developer-account combinations within each article-repository pair\nThe presence of multiple developer accounts per individual reflects common practices in academic software development that must be accommodated in our analysis.\ndevelopers often maintain separate accounts for different projects or institutions\naccount transitions are common as researchers move between roles\n\nFurther, while our model performs well, we note that there are some limitations to our approach.\n\nin most cases predictions are trivial due to minor differences in text (spelling of author name to username)\nhowever we do observe a few cases in which our model may not perform as well\nnamely, shorter names, articles and repositories which have contributors with the same last name (i.e. siblings or other relationship), and “organization” accounts (i.e. research lab GitHub accounts used for management, administration, and documentation or a project)\nTODO: should we take a sample and estimate how widespread these problems are?\nwe include appropriate filtering during analysis to ensure that we do not include author-developer pairs which are unlikely to be the same individual\n\nOur final dataset provides unprecedented scale and scope for analyzing the relationship between academic authorship and software development contributions.\n\nSpecifically, our dataset contains 138596 article-repository pairs, 295806 distinct authors, and 152170 distinct developer accounts.\nFrom the 295806 distinct authors and 152170 distinct developer accounts we are able to create 108754 annotated author-developer pairs\na detailed breakdown of these counts by data source, domain, document type, and open access status is available in Table 1\n\n\n\n\n\n\nTable 1: Counts of Article-Repository Pairs, Authors, and Developers by Data Sources, Domains, Document Types, and Access Status.\n\n\n\n\n\n\nCategory\nSubset\nArticle-Repository Pairs\nAuthors\nDevelopers\n\n\nBy Domain\nPhysical Sciences\n116600\n240545\n130592\n\n\nSocial Sciences\n8838\n29269\n14043\n\n\nLife Sciences\n7729\n31649\n12150\n\n\nHealth Sciences\n5172\n25979\n7248\n\n\nBy Document Type\npreprint\n72177\n170301\n87311\n\n\nresearch article\n63528\n173183\n78935\n\n\nsoftware article\n2891\n9294\n12868\n\n\nBy Access Status\nOpen\n132856\n286874\n147831\n\n\nClosed\n5740\n23668\n9352\n\n\nBy Data Source\npwc\n129615\n262889\n134926\n\n\nplos\n6090\n30233\n8784\n\n\njoss\n2336\n7105\n11362\n\n\nsoftwarex\n555\n2244\n1628\n\n\nTotal\n\n138596\n295806\n152170\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2: Number of articles by publication year. Only publication years with 100 or more articles are included."
  },
  {
    "objectID": "qss-code-authors.html#software-development-dynamics-within-research-teams",
    "href": "qss-code-authors.html#software-development-dynamics-within-research-teams",
    "title": "Code Contribution and Authorship",
    "section": "5.1 Software Development Dynamics Within Research Teams",
    "text": "5.1 Software Development Dynamics Within Research Teams\n\nWe begin by measuring the distributions of different coding and non-coding contributors across all of the article-code-repository pairs within our dataset.\n\nindividuals in our dataset can fall into three categories:\n\nCode-Contributing Authors (CC-A): authors for which our model predicted a match with at least one developer account which contributed code to the associated repository\nNon-Code-Contributing Authors (NCC-A): authors for which our model did not predict any matches with developer accouts which contributed code to the associated repository\nCode-Contributing Non-Authors (CC-NA): developer accounts which contributed code to the associated repository but were not predicted to be a match with any author\n\nwithin our dataset, we find that papers on average have 4.9 ± 1.9 total authors, 3.9 ± 2.0 non-code-contributing authors, 1.0 ± 0.7 code-contributing authors, and 0.4 ± 1.7 code-contributing non-authors (see Figure 3 for a visualization of these distributions).\nTable 2 provides a detailed breakdown of these distributions by domain, article type, and open access status.\nOur finding of, on average, only a single code-contributing author on a paper, is similar to previous work in understanding distributions of labor in knowledge production from Larivière, Pontille, and Sugimoto (2020) which found that the CRediT tasks of “Data Curation”, “Formal Analysis”, “Visualization”, and “Software” were all predominantly performed by a first author.\nHowever, we do also see that code-contributing non-authors are present in the data, albeit, on average, with less than one code-contributing non-author per article.\n\n\n\n\n\n\n\n\n\n\nFigure 3: Distribution of the number of Total Authors, Non-Code-Contributing Authors, Code-Contributing Authors, and Code-Contributing Non-Authors across all article-repository pairs. Only includes article-repository pairs with a most recent commit no later than 90 days after publication.\n\n\n\n\n\n\n\n\n\nTable 2: Mean and Standard Deviation of Non-Code-Contributing Authors (NCC-A), Code-Contributing Authors (CC-A), and Code-Contributing Non-Authors (CC-NA) Research Team Members by Domain, Article Type, and Open Access Status. Only includes research teams from article-repository pairs with a most recent commit no later than 90 days after publication and excludes research teams which are in the top 3% of total author sizes.\n\n\n\n\n\n\nControl\nSubset\nTotal Authors\nNCC-A\nCC-A\nCC-NA\n\n\nOA Status\nClosed\n5.1 ± 1.9\n4.0 ± 1.9\n1.1 ± 0.7\n0.5 ± 2.1\n\n\nOpen\n4.9 ± 1.9\n3.9 ± 2.0\n1.0 ± 0.7\n0.4 ± 1.7\n\n\nDomain\nHealth Sciences\n6.1 ± 2.5\n5.1 ± 2.5\n1.0 ± 0.6\n0.4 ± 1.2\n\n\nLife Sciences\n5.2 ± 2.1\n4.2 ± 2.2\n1.0 ± 0.7\n0.4 ± 1.2\n\n\nPhysical Sciences\n4.8 ± 1.8\n3.8 ± 1.9\n1.0 ± 0.7\n0.5 ± 1.8\n\n\nSocial Sciences\n4.5 ± 1.7\n3.5 ± 1.8\n1.1 ± 0.7\n0.3 ± 1.1\n\n\nArticle Type\npreprint\n4.8 ± 1.8\n3.8 ± 1.9\n1.1 ± 0.7\n0.5 ± 2.2\n\n\nresearch article\n4.9 ± 1.9\n3.9 ± 2.0\n1.0 ± 0.7\n0.4 ± 1.6\n\n\nsoftware article\n4.7 ± 1.9\n3.2 ± 1.9\n1.5 ± 1.4\n0.9 ± 1.1\n\n\n\n\n\n\n\n\n\nNext we investigate how these distributions have changed over time and how they change by the total number of authors on a paper.\n\nFigure 4 shows thats both, the mean number of code-contributing authors and code-contributing non-authors has remained relatively stable over time and across different total author sizes.\nthese descriptive statistics suggest that code-contributing non-authors are an inconsistent feature of research teams, and while their exclusion from authorship is not a recent phenomenon, their exclusion does not appear to be getting worse over time.\n\n\n\n\n\n\n\n\n\n\nFigure 4: Mean number of Non-Code-Contributing Authors, Code-Contributing Authors, and Code-Contributing Non-Authors by Publication Year and by Total Number of Authors. Only includes article-repository pairs with a most recent commit no later than 90 days after publication and excludes research-teams which are in the top 3% of total author sizes for publication years with 50 or more articles.\n\n\n\n\n\n\n5.1.1 Modeling Citations\n\nBuilding upon previous work which discuss the effects of team size and team diversity on scientific impact and software quality (see Section 3), we examine how the number of code contributors within a research team may be associated with an article’s research impact.\n\nWe hypothesize that more code contributors may signal greater technical complexity in research, which may be associated with higher citation counts as the community builds upon more technically sophisticated works.\n\nHowever, after analyzing our data, we find few significant associations between the number of code-contributing authors and non-authors, and article citations.\n\nWithout controlling for any domain, open access, or article type differences (Table 5), we find a positive association between the number of code-contributing authors and article citations with each code-contributing author being associated with a 4.5% increase in article citations (p &lt; 0.001).\nControlling for article type (Table 8), we find that for preprints, each code-contributing non-author is associated with a statistically significant 2.9% decrease in expected citations, holding other variables constant (p &lt; 0.01).\nFor research articles, we find a significant positive association between the number of code-contributing authors and citations (p &lt; 0.001). However, we cannot estimate the precise magnitude of this effect due to the non-significant main effect in the model.\nFinally, we additionally find a statistically significant relationship for code-contributing non-authors for research articles, specifically finding that each code-contributing non-author is associated with a 0.8% increase in expected citations (p &lt; 0.001).\nOverall, while we find some statistically significant associations between code contributions and citation counts, these effects are relatively modest in magnitude.\n\n\n\n\n5.1.2 Team Composition and Project Duration\n\nBuilding upon previous work examining standardized contribution frameworks and authorship attribution practices (see Section 3), we investigate how project duration may influence the distribution of coding roles between authors and non-authors.\n\nWe hypothesize that projects with longer development durations may show higher proportions of author-developers compared to non-author developers, as sustained technical engagement could increase the likelihood of receiving authorship recognition.\n\nHowever, our analysis finds no evidence to support this hypothesis:\n\nWhen examining the relationship between a repository’s commit duration and the percentage of developers who receive authorship recognition, we find no significant correlation (r = -0.00, p = n.s.).\nThis suggests that the length of time a project has been in development has no meaningful relationship with the proportion of developers who are recognized as authors.\nWhile this suggests authorship recognition may be driven by other factors, a more precise analysis would examine individual contribution durations rather than overall project length."
  },
  {
    "objectID": "qss-code-authors.html#characteristics-of-scientific-code-contributors",
    "href": "qss-code-authors.html#characteristics-of-scientific-code-contributors",
    "title": "Code Contribution and Authorship",
    "section": "5.2 Characteristics of Scientific Code Contributors",
    "text": "5.2 Characteristics of Scientific Code Contributors\n\n5.2.1 Author Positions of Code Contributing Authors\n\nBuilding upon previous work examining the relationship between authorship position and research contributions, we investigate how author position may relate to code contribution patterns.\n\nWe hypothesize that first authors, who traditionally contribute the bulk of intellectual and experimental work, would be most likely to contribute code to a project, while middle and last authors, who often provide oversight and guidance, would be less likely to contribute code.\n\nOur analysis supports this hypothesis:\n\nIn every case tested, we find that first authors are statistically significantly more likely to be code contributors than non-code contributors across most scenarios both overall, and regardless of Domain, Article Type, and Open Access Status.\nConversely, both middle authors and last authors are statistically significantly more likely to be non-code contributors.\nThese patterns align with traditional academic authorship conventions, where first authors often take primary responsibility for both intellectual and technical aspects of the research.\nTable 9 provides a detailed breakdown of Bonferronic-correct p-values from post-hoc binomial tests against the counts of author positions of code-contributing authors.\n\n\n\n\n5.2.2 Corresponding Status of Code Contributing Authors\n\nBuilding upon our analysis of author position, we next examine how corresponding author status relates to code contribution patterns.\n\nWe hypothesize that corresponding authors, who traditionally maintain research artifacts and serve as primary points of contact, would be more likely to contribute code compared to non-corresponding authors.\n\nHowever, our analysis reveals patterns contrary to this hypothesis:\n\nBoth corresponding and non-corresponding authors are statistically significantly less likely to be code contributors than would be expected by chance (p &lt; 0.001) in most scenarios (Table 10).\nThis pattern holds true across almost all conditions with the only exceptions found in software articles and closed access articles, where corresponding authors show no significant difference in their likelihood to contribute code.\nThese findings suggest that the responsibility for maintaining research artifacts may not typically extend to direct code contributions, contrary to traditional assumptions about corresponding author roles.\n\n\n\n\n5.2.3 Modeling H-Index\n\n\n\n\nTable 3: Counts of Researcher Coding Status Used in H5\n\n\n\n\n\n\nControl\nSubset\nAny Coding\nMajority Coding\nAlways Coding\nTotal\n\n\nFreq. Author Pos.\nFirst\n1689\n4952\n3322\n11444\n\n\nMiddle\n12184\n3327\n701\n31911\n\n\nLast\n2413\n568\n191\n10188\n\n\nFreq. Domain\nHealth Sciences\n345\n202\n86\n1501\n\n\nLife Sciences\n369\n241\n129\n1436\n\n\nPhysical Sciences\n15289\n8179\n3821\n49311\n\n\nSocial Sciences\n283\n225\n178\n1295\n\n\nFreq. Article Type\nPreprint\n9572\n4963\n2214\n28948\n\n\nResearch Article\n6669\n3765\n1871\n24217\n\n\nSoftware Article\n45\n119\n129\n378\n\n\n\n\n\n\n\n\n\nBuilding upon previous work examining career implications for researchers who prioritize software development (see Section 3), we investigate how varying levels of code contribution relate to scholarly impact through citation metrics.\n\nWe hypothesize that researchers who contribute more code may show lower citation counts, potentially due to a lack of formal software citation or more general attitudes towards methodological vs theoretical contributions.\n\nWhile we can’t confirm the underlying mechanisms, we do find strong evidence to support our general claim that code-contributing researchers are associated with lower h-indices compared to their non-coding peers.\n\nWithout any controls (Table 11), we find increasingly negative h-index effects as coding frequency increases compared to non-coding authors with scientists who occasionally make code contributions being associated with ~27.3% lower h-indices than their non-coding counterparts (p &lt; 0.001), followed by ~53.5% lower h-indices for majority coders (p &lt; 0.001), and ~62.1% lower h-indices for always coding authors (p &lt; 0.001).\nWhen controlling for author position (Table 12), we find again find a general pattern that more frequent code contribution is associated with reduced h-indices compared to non-coding peers with a few exceptions.\n\nOccasional coding first authors are associated with a ~14.9% higher h-index (p &lt; 0.001) while always coding first authors are associated with a ~21.6% reduction in h-index compared to non-coding first authors (p &lt; 0.001).\nOccasional coding middle authors are associated with a ~26.6% lower h-index (p &lt; 0.001) while always coding middle authors are associated with a ~52.9% lower h-index compared to non-coding middle authors (p &lt; 0.001).\nOccasional coding last authors are associated with a ~13.1% lower h-index (p &lt; 0.001) while always coding last authors are associated with a ~45.7% lower h-index compared to non-coding last authors (p &lt; 0.001).\n\nWhen controlling for domain (Table 13), majority coding scientists in health science domains are associated with a ~76.5% reduction in h-index compared to non-coding peers (p &lt; 0.001), while majority coding scientists in life science see a ~47.1% reduction (p &lt; 0.001), physical science majority coding scientists see a ~52.3% reduction (p &lt; 0.001), and majority coding scientists in social sciences see a ~51.4% reduction in h-index compared to non-coding peers (p &lt; 0.001).\nFinally, when controlling for an authors common article type (Table 14), we find that:\n\nfor authors whose most common article type is preprints, occasionally coding authors are associated with a ~25.6% lower h-index, majority coding authors are associated with a ~53.5% lower h-index, and always coding authors are associated with a ~62.9% lower h-index compared to their non-coding peers.\nwhile for authors whose most common article type is software articles, majority coding authors are associated with a ~33.1% lower h-index, and always coding authors are associated with a ~33.0% lower h-index compared to their non-coding peers.\n\n\nTaken as a whole, these findings tend to indicate that the more frequently an author contributes code, the lower their h-index is likely to be relative to their peers, with one exception being first authors who occasionally contribute code."
  },
  {
    "objectID": "qss-code-authors.html#full-comparison-of-models-and-optional-features-for-author-developer-account-matching",
    "href": "qss-code-authors.html#full-comparison-of-models-and-optional-features-for-author-developer-account-matching",
    "title": "Code Contribution and Authorship",
    "section": "8.1 Full Comparison of Models and Optional Features for Author-Developer-Account Matching",
    "text": "8.1 Full Comparison of Models and Optional Features for Author-Developer-Account Matching\n\n\n\n\nTable 4: Comparison of Models for Author-Developer-Account Matching\n\n\n\n\n\n\n\n\n\n\nOptional Feats.\nModel\nAccuracy\nPrecision\nRecall\nF1\n\n\n\n\n0\nname\ndeberta\n0.984\n0.938\n0.950\n0.944\n\n\n1\nname, email\nbert-multilingual\n0.984\n0.938\n0.950\n0.944\n\n\n2\nname, email\ndeberta\n0.982\n0.907\n0.975\n0.940\n\n\n3\nname\nbert-multilingual\n0.982\n0.938\n0.938\n0.938\n\n\n4\nname\ndistilbert\n0.978\n0.936\n0.912\n0.924\n\n\n5\nname, email\ndistilbert\n0.978\n0.936\n0.912\n0.924\n\n\n6\nemail\ndeberta\n0.957\n0.859\n0.838\n0.848\n\n\n7\nemail\nbert-multilingual\n0.950\n0.894\n0.738\n0.808\n\n\n8\nn/a\ndeberta\n0.946\n0.847\n0.762\n0.803\n\n\n9\nn/a\nbert-multilingual\n0.941\n0.862\n0.700\n0.772\n\n\n10\nn/a\ndistilbert\n0.856\n0.000\n0.000\n0.000\n\n\n11\nemail\ndistilbert\n0.856\n0.000\n0.000\n0.000"
  },
  {
    "objectID": "qss-code-authors.html#linear-models-for-software-development-dynamics-within-research-teams",
    "href": "qss-code-authors.html#linear-models-for-software-development-dynamics-within-research-teams",
    "title": "Code Contribution and Authorship",
    "section": "8.2 Linear Models for Software Development Dynamics Within Research Teams",
    "text": "8.2 Linear Models for Software Development Dynamics Within Research Teams\n\n8.2.1 No Controls\n\n\n\n\nTable 5: Article Citations by Code Contributorship of Research Team\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\ncited_by_count\nNo. Observations:\n22127\n\n\nModel:\nGLM\nDf Residuals:\n22122\n\n\nModel Family:\nNegativeBinomial\nDf Model:\n4\n\n\nLink Function:\nLog\nScale:\n1.0000\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-76535.\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n22306.\n\n\nTime:\n00:32:31\nPearson chi2:\n3.39e+04\n\n\nNo. Iterations:\n13\nPseudo R-squ. (CS):\n0.2875\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n0.9900\n0.026\n38.607\n0.000\n0.940\n1.040\n\n\nTotal Authors\n0.0691\n0.004\n18.481\n0.000\n0.062\n0.076\n\n\nCode-Contrib. Authors\n0.0437\n0.010\n4.203\n0.000\n0.023\n0.064\n\n\nCode-Contrib. Non-Authors\n-0.0011\n0.004\n-0.253\n0.800\n-0.009\n0.007\n\n\nYears Since Publication\n0.3904\n0.004\n96.885\n0.000\n0.383\n0.398\n\n\n\n\n\n\n\n\n\n\n8.2.2 Controlled by Open Access Status\n\n\n\n\nTable 6: Article Citations by Code Contributorship of Research Team Controlled by Open Access Status\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\ncited_by_count\nNo. Observations:\n22127\n\n\nModel:\nGLM\nDf Residuals:\n22119\n\n\nModel Family:\nNegativeBinomial\nDf Model:\n7\n\n\nLink Function:\nLog\nScale:\n1.0000\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-76467.\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n22169.\n\n\nTime:\n00:32:31\nPearson chi2:\n3.37e+04\n\n\nNo. Iterations:\n13\nPseudo R-squ. (CS):\n0.2920\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n0.6109\n0.062\n9.846\n0.000\n0.489\n0.732\n\n\nTotal Authors\n0.0696\n0.004\n18.600\n0.000\n0.062\n0.077\n\n\nCode-Contrib. Authors\n0.0540\n0.046\n1.171\n0.242\n-0.036\n0.144\n\n\nCode-Contrib. Non-Authors\n0.0007\n0.015\n0.049\n0.961\n-0.029\n0.031\n\n\nYears Since Publication\n0.3810\n0.004\n93.042\n0.000\n0.373\n0.389\n\n\nIs Open Access\n0.4194\n0.061\n6.904\n0.000\n0.300\n0.539\n\n\nCode-Contrib. Authors * Is Open Access\n-0.0104\n0.047\n-0.221\n0.825\n-0.103\n0.082\n\n\nCode-Contrib. Non-Authors * Is Open Access\n-0.0012\n0.016\n-0.075\n0.941\n-0.032\n0.030\n\n\n\n\n\n\n\n\n\n\n8.2.3 Controlled by Domain\n\n\n\n\nTable 7: Article Citations by Code Contributorship of Research Team Controlled by Domain\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\ncited_by_count\nNo. Observations:\n22127\n\n\nModel:\nGLM\nDf Residuals:\n22113\n\n\nModel Family:\nNegativeBinomial\nDf Model:\n13\n\n\nLink Function:\nLog\nScale:\n1.0000\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-76442.\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n22120.\n\n\nTime:\n00:32:31\nPearson chi2:\n3.35e+04\n\n\nNo. Iterations:\n13\nPseudo R-squ. (CS):\n0.2935\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n0.8816\n0.068\n12.926\n0.000\n0.748\n1.015\n\n\nTotal Authors\n0.0709\n0.004\n18.631\n0.000\n0.063\n0.078\n\n\nCode-Contrib. Authors\n0.0278\n0.053\n0.522\n0.601\n-0.077\n0.132\n\n\nCode-Contrib. Non-Authors\n0.0133\n0.026\n0.507\n0.612\n-0.038\n0.065\n\n\nYears Since Publication\n0.3970\n0.004\n97.365\n0.000\n0.389\n0.405\n\n\nDomain Life Sciences\n-0.2104\n0.077\n-2.729\n0.006\n-0.362\n-0.059\n\n\nDomain Physical Sciences\n0.1370\n0.064\n2.131\n0.033\n0.011\n0.263\n\n\nDomain Social Sciences\n-0.1800\n0.082\n-2.203\n0.028\n-0.340\n-0.020\n\n\nCode-Contrib. Authors * Domain Life Sciences\n0.0678\n0.064\n1.053\n0.292\n-0.058\n0.194\n\n\nCode-Contrib. Authors * Domain Physical Sciences\n0.0046\n0.055\n0.085\n0.932\n-0.102\n0.111\n\n\nCode-Contrib. Authors * Domain Social Sciences\n0.0981\n0.066\n1.477\n0.140\n-0.032\n0.228\n\n\nCode-Contrib. Non-Authors * Domain Life Sciences\n-0.0414\n0.035\n-1.195\n0.232\n-0.109\n0.026\n\n\nCode-Contrib. Non-Authors * Domain Physical Sciences\n-0.0151\n0.027\n-0.568\n0.570\n-0.067\n0.037\n\n\nCode-Contrib. Non-Authors * Domain Social Sciences\n-0.0366\n0.036\n-1.015\n0.310\n-0.107\n0.034\n\n\n\n\n\n\n\n\n\n\n8.2.4 Controlled by Article Type\n\n\n\n\nTable 8: Article Citations by Code Contributorship of Research Team Controlled by Article Type\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\ncited_by_count\nNo. Observations:\n22127\n\n\nModel:\nGLM\nDf Residuals:\n22116\n\n\nModel Family:\nNegativeBinomial\nDf Model:\n10\n\n\nLink Function:\nLog\nScale:\n1.0000\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-76090.\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n21416.\n\n\nTime:\n00:32:31\nPearson chi2:\n3.26e+04\n\n\nNo. Iterations:\n13\nPseudo R-squ. (CS):\n0.3156\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n0.5266\n0.042\n12.589\n0.000\n0.445\n0.609\n\n\nTotal Authors\n0.0688\n0.004\n18.353\n0.000\n0.061\n0.076\n\n\nCode-Contrib. Authors\n-0.0348\n0.027\n-1.283\n0.200\n-0.088\n0.018\n\n\nCode-Contrib. Non-Authors\n-0.0296\n0.010\n-3.103\n0.002\n-0.048\n-0.011\n\n\nYears Since Publication\n0.4023\n0.004\n99.431\n0.000\n0.394\n0.410\n\n\nArticle Type Research Article\n0.4730\n0.038\n12.345\n0.000\n0.398\n0.548\n\n\nArticle Type Software Article\n-0.4740\n0.131\n-3.618\n0.000\n-0.731\n-0.217\n\n\nCode-Contrib. Authors * Article Type Research Article\n0.1037\n0.029\n3.519\n0.000\n0.046\n0.162\n\n\nCode-Contrib. Authors * Article Type Software Article\n-0.0594\n0.066\n-0.904\n0.366\n-0.188\n0.069\n\n\nCode-Contrib. Non-Authors * Article Type Research Article\n0.0375\n0.011\n3.523\n0.000\n0.017\n0.058\n\n\nCode-Contrib. Non-Authors * Article Type Software Article\n0.0892\n0.076\n1.176\n0.240\n-0.060\n0.238"
  },
  {
    "objectID": "qss-code-authors.html#post-hoc-tests-for-coding-vs-non-coding-authors-by-position",
    "href": "qss-code-authors.html#post-hoc-tests-for-coding-vs-non-coding-authors-by-position",
    "title": "Code Contribution and Authorship",
    "section": "8.3 Post-Hoc Tests for Coding vs Non-Coding Authors by Position",
    "text": "8.3 Post-Hoc Tests for Coding vs Non-Coding Authors by Position\n\n\n\n\nTable 9: Counts of Code-Contributing Authors (‘Coding’) as well as Total Authors by Position and Bonferroni Corrected p-values from Post-Hoc Binomial Tests\n\n\n\n\n\n\nControl\nSubset\nPosition\nCoding\nTotal\np\n\n\nDomain\nHealth Sciences\nFirst\n1575\n2401\n0.000***\n\n\nMiddle\n540\n11491\n0.000***\n\n\nLast\n234\n2349\n0.000***\n\n\nLife Sciences\nFirst\n2586\n3895\n0.000***\n\n\nMiddle\n852\n11875\n0.000***\n\n\nLast\n491\n3784\n0.000***\n\n\nPhysical Sciences\nFirst\n28919\n41987\n0.000***\n\n\nMiddle\n10507\n111738\n0.000***\n\n\nLast\n3433\n40410\n0.000***\n\n\nSocial Sciences\nFirst\n2813\n4038\n0.000***\n\n\nMiddle\n1021\n9249\n0.000***\n\n\nLast\n411\n3855\n0.000***\n\n\nArticle Type\nPreprint\nFirst\n13421\n19523\n0.000***\n\n\nMiddle\n5134\n52925\n0.000***\n\n\nLast\n1493\n18598\n0.000***\n\n\nResearch Article\nFirst\n21940\n32081\n0.000***\n\n\nMiddle\n7345\n89991\n0.000***\n\n\nLast\n2909\n31188\n0.000***\n\n\nSoftware Article\nFirst\n532\n717\n0.000***\n\n\nMiddle\n441\n1437\n0.000***\n\n\nLast\n167\n612\n0.000***\n\n\nOpen Access Status\nClosed Access\nFirst\n2637\n3742\n0.000***\n\n\nMiddle\n918\n10965\n0.000***\n\n\nLast\n279\n3642\n0.000***\n\n\nOpen Access\nFirst\n33256\n48579\n0.000***\n\n\nMiddle\n12002\n133388\n0.000***\n\n\nLast\n4290\n46756\n0.000***\n\n\nOverall\nOverall\nFirst\n35893\n52321\n0.000***\n\n\nMiddle\n12920\n144353\n0.000***\n\n\nLast\n4569\n50398\n0.000***"
  },
  {
    "objectID": "qss-code-authors.html#post-hoc-tests-for-coding-vs-non-coding-authors-by-corresponding-status",
    "href": "qss-code-authors.html#post-hoc-tests-for-coding-vs-non-coding-authors-by-corresponding-status",
    "title": "Code Contribution and Authorship",
    "section": "8.4 Post-Hoc Tests for Coding vs Non-Coding Authors by Corresponding Status",
    "text": "8.4 Post-Hoc Tests for Coding vs Non-Coding Authors by Corresponding Status\n\n\n\n\nTable 10: Counts of Code-Contributing Authors (‘Coding’) as well as Total Authors by Corresponding Status and Bonferroni Corrected p-values from Post-Hoc Binomial Tests\n\n\n\n\n\n\nControl\nSubset\nIs Corresponding\nCoding\nTotal\np\n\n\nDomain\nLife Sciences\nCorresponding\n1772\n8019\n0.000***\n\n\nNot Corresponding\n2157\n11535\n0.000***\n\n\nPhysical Sciences\nCorresponding\n5248\n12487\n0.000***\n\n\nNot Corresponding\n37611\n181648\n0.000***\n\n\nSocial Sciences\nCorresponding\n803\n2458\n0.000***\n\n\nNot Corresponding\n3442\n14684\n0.000***\n\n\nArticle Type\nPreprint\nCorresponding\n772\n1036\n0.000***\n\n\nNot Corresponding\n19276\n90010\n0.000***\n\n\nResearch Article\nCorresponding\n7716\n27339\n0.000***\n\n\nNot Corresponding\n24478\n125921\n0.000***\n\n\nSoftware Article\nCorresponding\n213\n438\n1.000\n\n\nNot Corresponding\n927\n2328\n0.000***\n\n\nOpen Access Status\nClosed Access\nCorresponding\n253\n468\n0.174\n\n\nNot Corresponding\n3581\n17881\n0.000***\n\n\nOpen Access\nCorresponding\n8448\n28345\n0.000***\n\n\nNot Corresponding\n41100\n200378\n0.000***\n\n\nOverall\nOverall\nCorresponding\n8701\n28813\n0.000***\n\n\nNot Corresponding\n44681\n218259\n0.000***"
  },
  {
    "objectID": "qss-code-authors.html#linear-models-for-characterizing-code-contributing-author-h-index",
    "href": "qss-code-authors.html#linear-models-for-characterizing-code-contributing-author-h-index",
    "title": "Code Contribution and Authorship",
    "section": "8.5 Linear Models for Characterizing Code-Contributing Author H-Index",
    "text": "8.5 Linear Models for Characterizing Code-Contributing Author H-Index\n\n8.5.1 No Controls\n\n\n\n\nTable 11: Code-Contributing Authors H-Index by Coding Status\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\nh_index\nNo. Observations:\n49355\n\n\nModel:\nGLM\nDf Residuals:\n49350\n\n\nModel Family:\nGaussian\nDf Model:\n4\n\n\nLink Function:\nLog\nScale:\n197.81\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-2.0051e+05\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n9.7618e+06\n\n\nTime:\n00:32:34\nPearson chi2:\n9.76e+06\n\n\nNo. Iterations:\n43\nPseudo R-squ. (CS):\n0.1799\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n3.1910\n0.004\n832.251\n0.000\n3.184\n3.199\n\n\nWorks Count\n0.0001\n1.98e-06\n66.574\n0.000\n0.000\n0.000\n\n\nAny Coding\n-0.3188\n0.007\n-43.308\n0.000\n-0.333\n-0.304\n\n\nMajority Coding\n-0.7653\n0.014\n-55.218\n0.000\n-0.792\n-0.738\n\n\nAlways Coding\n-0.9701\n0.025\n-39.065\n0.000\n-1.019\n-0.921\n\n\n\n\n\n\n\n\n\n\n8.5.2 Controlled by Author Position\n\n\n\n\nTable 12: Researcher H-Index by Coding Status Controlled by Most Freq. Author Position\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\nh_index\nNo. Observations:\n49355\n\n\nModel:\nGLM\nDf Residuals:\n49342\n\n\nModel Family:\nGaussian\nDf Model:\n12\n\n\nLink Function:\nLog\nScale:\n180.01\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-1.9818e+05\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n8.8819e+06\n\n\nTime:\n00:32:34\nPearson chi2:\n8.88e+06\n\n\nNo. Iterations:\n44\nPseudo R-squ. (CS):\n0.2717\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n2.3772\n0.034\n70.483\n0.000\n2.311\n2.443\n\n\nWorks Count\n0.0001\n1.97e-06\n67.398\n0.000\n0.000\n0.000\n\n\nAny Coding\n0.1388\n0.043\n3.224\n0.001\n0.054\n0.223\n\n\nMajority Coding\n-0.0674\n0.039\n-1.734\n0.083\n-0.144\n0.009\n\n\nAlways Coding\n-0.2432\n0.044\n-5.481\n0.000\n-0.330\n-0.156\n\n\nCommon Author Position Last\n1.0456\n0.034\n30.622\n0.000\n0.979\n1.113\n\n\nCommon Author Position Middle\n0.7432\n0.034\n21.809\n0.000\n0.676\n0.810\n\n\nAny Coding * Common Author Position Last\n-0.2793\n0.045\n-6.265\n0.000\n-0.367\n-0.192\n\n\nAny Coding * Common Author Position Middle\n-0.4483\n0.044\n-10.200\n0.000\n-0.534\n-0.362\n\n\nMajority Coding * Common Author Position Last\n-0.3515\n0.048\n-7.310\n0.000\n-0.446\n-0.257\n\n\nMajority Coding * Common Author Position Middle\n-0.6074\n0.044\n-13.824\n0.000\n-0.694\n-0.521\n\n\nAlways Coding * Common Author Position Last\n-0.3680\n0.074\n-4.970\n0.000\n-0.513\n-0.223\n\n\nAlways Coding * Common Author Position Middle\n-0.5090\n0.067\n-7.641\n0.000\n-0.640\n-0.378\n\n\n\n\n\n\n\n\n\n\n8.5.3 Controlled by Domain\n\n\n\n\nTable 13: Researcher H-Index by Coding Status Controlled by Most Freq. Domain\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\nh_index\nNo. Observations:\n49355\n\n\nModel:\nGLM\nDf Residuals:\n49338\n\n\nModel Family:\nGaussian\nDf Model:\n16\n\n\nLink Function:\nLog\nScale:\n196.53\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-2.0034e+05\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n9.6964e+06\n\n\nTime:\n00:32:34\nPearson chi2:\n9.70e+06\n\n\nNo. Iterations:\n48\nPseudo R-squ. (CS):\n0.1865\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n3.3235\n0.018\n187.923\n0.000\n3.289\n3.358\n\n\nWorks Count\n0.0001\n2.06e-06\n66.499\n0.000\n0.000\n0.000\n\n\nAny Coding\n-0.3929\n0.044\n-8.865\n0.000\n-0.480\n-0.306\n\n\nMajority Coding\n-1.4465\n0.101\n-14.290\n0.000\n-1.645\n-1.248\n\n\nAlways Coding\n-1.2212\n0.186\n-6.577\n0.000\n-1.585\n-0.857\n\n\nCommon Domain Life Sciences\n0.0976\n0.025\n3.841\n0.000\n0.048\n0.147\n\n\nCommon Domain Physical Sciences\n-0.1455\n0.018\n-8.024\n0.000\n-0.181\n-0.110\n\n\nCommon Domain Social Sciences\n-0.1612\n0.030\n-5.314\n0.000\n-0.221\n-0.102\n\n\nAny Coding * Common Domain Life Sciences\n0.1064\n0.058\n1.847\n0.065\n-0.006\n0.219\n\n\nAny Coding * Common Domain Physical Sciences\n0.0769\n0.045\n1.709\n0.087\n-0.011\n0.165\n\n\nAny Coding * Common Domain Social Sciences\n0.0053\n0.073\n0.073\n0.942\n-0.137\n0.148\n\n\nMajority Coding * Common Domain Life Sciences\n0.8106\n0.117\n6.920\n0.000\n0.581\n1.040\n\n\nMajority Coding * Common Domain Physical Sciences\n0.7001\n0.102\n6.849\n0.000\n0.500\n0.900\n\n\nMajority Coding * Common Domain Social Sciences\n0.7242\n0.133\n5.461\n0.000\n0.464\n0.984\n\n\nAlways Coding * Common Domain Life Sciences\n0.3295\n0.211\n1.561\n0.119\n-0.084\n0.743\n\n\nAlways Coding * Common Domain Physical Sciences\n0.2526\n0.188\n1.347\n0.178\n-0.115\n0.620\n\n\nAlways Coding * Common Domain Social Sciences\n0.3009\n0.220\n1.368\n0.171\n-0.130\n0.732\n\n\n\n\n\n\n\n\n\n\n8.5.4 Controlled by Article Type\n\n\n\n\nTable 14: Researcher H-Index by Coding Status Controlled by Most Freq. Article Type\n\n\n\n\nGeneralized Linear Model Regression Results\n\n\nDep. Variable:\nh_index\nNo. Observations:\n49355\n\n\nModel:\nGLM\nDf Residuals:\n49342\n\n\nModel Family:\nGaussian\nDf Model:\n12\n\n\nLink Function:\nLog\nScale:\n194.43\n\n\nMethod:\nIRLS\nLog-Likelihood:\n-2.0008e+05\n\n\nDate:\nWed, 29 Jan 2025\nDeviance:\n9.5937e+06\n\n\nTime:\n00:32:34\nPearson chi2:\n9.59e+06\n\n\nNo. Iterations:\n47\nPseudo R-squ. (CS):\n0.1970\n\n\nCovariance Type:\nnonrobust\n\n\n\n\n\n\n\n\n\n\n\ncoef\nstd err\nz\nP&gt;|z|\n[0.025\n0.975]\n\n\nconst\n3.0971\n0.006\n527.713\n0.000\n3.086\n3.109\n\n\nWorks Count\n0.0001\n1.99e-06\n64.413\n0.000\n0.000\n0.000\n\n\nAny Coding\n-0.2953\n0.011\n-27.851\n0.000\n-0.316\n-0.274\n\n\nMajority Coding\n-0.7661\n0.021\n-37.076\n0.000\n-0.807\n-0.726\n\n\nAlways Coding\n-0.9917\n0.039\n-25.315\n0.000\n-1.068\n-0.915\n\n\nCommon Article Type Research Article\n0.1816\n0.008\n23.690\n0.000\n0.167\n0.197\n\n\nCommon Article Type Software Article\n0.2247\n0.056\n4.040\n0.000\n0.116\n0.334\n\n\nAny Coding * Common Article Type Research Article\n-0.0209\n0.015\n-1.425\n0.154\n-0.050\n0.008\n\n\nAny Coding * Common Article Type Software Article\n0.1893\n0.100\n1.889\n0.059\n-0.007\n0.386\n\n\nMajority Coding * Common Article Type Research Article\n0.0071\n0.028\n0.256\n0.798\n-0.047\n0.062\n\n\nMajority Coding * Common Article Type Software Article\n0.3646\n0.090\n4.049\n0.000\n0.188\n0.541\n\n\nAlways Coding * Common Article Type Research Article\n0.0043\n0.052\n0.083\n0.934\n-0.097\n0.105\n\n\nAlways Coding * Common Article Type Software Article\n0.3653\n0.107\n3.400\n0.001\n0.155\n0.576"
  }
]