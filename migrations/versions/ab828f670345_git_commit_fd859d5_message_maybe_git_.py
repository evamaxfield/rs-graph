"""Git Commit: fd859d5 -- Message: Maybe git clean works now for db migrate

Revision ID: ab828f670345
Revises: 
Create Date: 2024-03-27 11:44:51.627168

"""
from typing import Sequence, Union

import sqlmodel
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab828f670345'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('code_host',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'url')
    )
    op.create_table('credit_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('dataset_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('field_of_study',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('funding_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('position',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('researcher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wos_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('h_index', sa.Integer(), nullable=True),
    sa.Column('s2_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('wos_uuid')
    )
    op.create_table('developer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ecosystems_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['host'], ['code_host.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'username')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('published_datetime', sa.Date(), nullable=False),
    sa.Column('s2_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('abstract', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('keywords', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primary_field_id', sa.Integer(), nullable=True),
    sa.Column('secondary_field_id', sa.Integer(), nullable=True),
    sa.Column('field_weighted_citation_impact', sa.Float(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['primary_field_id'], ['field_of_study.id'], ),
    sa.ForeignKeyConstraint(['secondary_field_id'], ['field_of_study.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi')
    )
    op.create_table('funding_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('funding_source_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('abstract', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('funding_start_datetime', sa.DateTime(), nullable=False),
    sa.Column('funding_end_datetime', sa.DateTime(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['funding_source_id'], ['funding_source.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('funding_source_id', 'title')
    )
    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('host_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('readme_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('repository_created_datetime', sa.DateTime(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_code_embedding_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_code_embedding_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_code_embedding_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_code_embedding_updated_datetime', sa.DateTime(), nullable=True),
    sa.Column('ecosystems_uuid', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['host_id'], ['code_host.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('host_id', 'name')
    )
    op.create_table('commit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('commit_datetime', sa.DateTime(), nullable=False),
    sa.Column('committer_username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('committer_email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('code_positive_change', sa.Integer(), nullable=False),
    sa.Column('code_negative_change', sa.Integer(), nullable=False),
    sa.Column('code_abs_change', sa.Integer(), nullable=False),
    sa.Column('filenames_changed', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'developer_id', 'hash')
    )
    op.create_table('developer_researcher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('researcher_id', sa.Integer(), nullable=False),
    sa.Column('developer_researcher_match_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('developer_researcher_match_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer.id'], ),
    sa.ForeignKeyConstraint(['researcher_id'], ['researcher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('developer_id', 'researcher_id')
    )
    op.create_table('document_funding_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('funding_instance_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('document_funding_match_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('document_funding_match_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['funding_instance_id'], ['funding_instance.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['dataset_source.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'funding_instance_id', 'source_id')
    )
    op.create_table('repository_contributor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('developer_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_id'], ['developer.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('developer_id'),
    sa.UniqueConstraint('repository_id'),
    sa.UniqueConstraint('repository_id', 'developer_id')
    )
    op.create_table('repository_document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('repository_document_match_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('repository_document_match_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['dataset_source.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'document_id', 'source_id')
    )
    op.create_table('repository_funding_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('funding_instance_id', sa.Integer(), nullable=False),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('repository_funding_match_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('repository_funding_match_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['funding_instance_id'], ['funding_instance.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['dataset_source.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'funding_instance_id', 'source_id')
    )
    op.create_table('researcher_document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('researcher_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('position_id', sa.Integer(), nullable=False),
    sa.Column('acknowledgement_extraction_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('acknowledgement_extraction_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['position_id'], ['position.id'], ),
    sa.ForeignKeyConstraint(['researcher_id'], ['researcher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('researcher_id', 'document_id', 'position_id')
    )
    op.create_table('researcher_document_credit_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('researcher_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('credit_role_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['credit_role_id'], ['credit_role.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['researcher_id'], ['researcher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('researcher_id', 'document_id', 'credit_role_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('researcher_document_credit_role')
    op.drop_table('researcher_document')
    op.drop_table('repository_funding_instance')
    op.drop_table('repository_document')
    op.drop_table('repository_contributor')
    op.drop_table('document_funding_instance')
    op.drop_table('developer_researcher')
    op.drop_table('commit')
    op.drop_table('repository')
    op.drop_table('funding_instance')
    op.drop_table('document')
    op.drop_table('developer')
    op.drop_table('researcher')
    op.drop_table('position')
    op.drop_table('funding_source')
    op.drop_table('field_of_study')
    op.drop_table('dataset_source')
    op.drop_table('credit_role')
    op.drop_table('code_host')
    # ### end Alembic commands ###
