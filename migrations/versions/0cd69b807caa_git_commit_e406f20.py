"""Git Commit: e406f20

Revision ID: 0cd69b807caa
Revises: 
Create Date: 2025-06-30 08:43:32.950574

"""
from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op


# revision identifiers, used by Alembic.
revision: str = '0cd69b807caa'
down_revision: str | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('code_host',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('code_host', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_code_host_name'), ['name'], unique=True)

    op.create_table('dataset_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('funder',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('funder', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_funder_name'), ['name'], unique=False)

    op.create_table('institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('institution_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ror', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('institution', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_institution_country_code'), ['country_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_institution_institution_type'), ['institution_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_institution_name'), ['name'], unique=False)

    op.create_table('researcher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('works_count', sa.Integer(), nullable=False),
    sa.Column('cited_by_count', sa.Integer(), nullable=False),
    sa.Column('h_index', sa.Integer(), nullable=False),
    sa.Column('i10_index', sa.Integer(), nullable=False),
    sa.Column('two_year_mean_citedness', sa.Float(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('researcher', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_researcher_cited_by_count'), ['cited_by_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_researcher_h_index'), ['h_index'], unique=False)
        batch_op.create_index(batch_op.f('ix_researcher_i10_index'), ['i10_index'], unique=False)
        batch_op.create_index(batch_op.f('ix_researcher_two_year_mean_citedness'), ['two_year_mean_citedness'], unique=False)
        batch_op.create_index(batch_op.f('ix_researcher_works_count'), ['works_count'], unique=False)

    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('host_organization_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('host_organization_open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_source_host_organization_name'), ['host_organization_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_source_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_source_source_type'), ['source_type'], unique=False)

    op.create_table('topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('field_open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subfield_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('subfield_open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('domain_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('domain_open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('topic', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_topic_domain_name'), ['domain_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_topic_field_name'), ['field_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_topic_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_topic_subfield_name'), ['subfield_name'], unique=False)

    op.create_table('developer_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_host_id', sa.Integer(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code_host_id'], ['code_host.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_host_id', 'username')
    )
    with op.batch_alter_table('developer_account', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_developer_account_code_host_id'), ['code_host_id'], unique=False)

    op.create_table('funding_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('funder_id', sa.Integer(), nullable=False),
    sa.Column('award_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['funder_id'], ['funder.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('funder_id', 'award_id')
    )
    with op.batch_alter_table('funding_instance', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_funding_instance_award_id'), ['award_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_funding_instance_funder_id'), ['funder_id'], unique=False)

    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_open_access', sa.Boolean(), nullable=False),
    sa.Column('landing_page_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pdf_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_is_open_access'), ['is_open_access'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_landing_page_url'), ['landing_page_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_license'), ['license'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_pdf_url'), ['pdf_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_source_id'), ['source_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_version'), ['version'], unique=False)

    op.create_table('repository',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code_host_id', sa.Integer(), nullable=False),
    sa.Column('owner', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_fork', sa.Boolean(), nullable=False),
    sa.Column('forks_count', sa.Integer(), nullable=False),
    sa.Column('stargazers_count', sa.Integer(), nullable=False),
    sa.Column('watchers_count', sa.Integer(), nullable=False),
    sa.Column('open_issues_count', sa.Integer(), nullable=False),
    sa.Column('commits_count', sa.Integer(), nullable=True),
    sa.Column('size_kb', sa.Integer(), nullable=False),
    sa.Column('topics', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primary_language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('default_branch', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), nullable=False),
    sa.Column('last_pushed_datetime', sa.DateTime(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['code_host_id'], ['code_host.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_host_id', 'owner', 'name')
    )
    with op.batch_alter_table('repository', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_code_host_id'), ['code_host_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_commits_count'), ['commits_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_creation_datetime'), ['creation_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_default_branch'), ['default_branch'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_forks_count'), ['forks_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_is_fork'), ['is_fork'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_last_pushed_datetime'), ['last_pushed_datetime'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_license'), ['license'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_open_issues_count'), ['open_issues_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_primary_language'), ['primary_language'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_stargazers_count'), ['stargazers_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_watchers_count'), ['watchers_count'], unique=False)

    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=False),
    sa.Column('cited_by_count', sa.Integer(), nullable=False),
    sa.Column('fwci', sa.Float(), nullable=True),
    sa.Column('citation_normalized_percentile', sa.Float(), nullable=True),
    sa.Column('document_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_open_access', sa.Boolean(), nullable=False),
    sa.Column('open_access_status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('primary_location_id', sa.Integer(), nullable=True),
    sa.Column('best_open_access_location_id', sa.Integer(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['best_open_access_location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['primary_location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi')
    )
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_best_open_access_location_id'), ['best_open_access_location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_citation_normalized_percentile'), ['citation_normalized_percentile'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_cited_by_count'), ['cited_by_count'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_document_type'), ['document_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_fwci'), ['fwci'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_is_open_access'), ['is_open_access'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_open_access_status'), ['open_access_status'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_primary_location_id'), ['primary_location_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_publication_date'), ['publication_date'], unique=False)

    op.create_table('repository_contributor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('developer_account_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_account_id'], ['developer_account.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'developer_account_id')
    )
    with op.batch_alter_table('repository_contributor', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_contributor_developer_account_id'), ['developer_account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_contributor_repository_id'), ['repository_id'], unique=False)

    op.create_table('repository_file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tree_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bytes_of_code', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'path')
    )
    with op.batch_alter_table('repository_file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_file_path'), ['path'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_file_repository_id'), ['repository_id'], unique=False)

    op.create_table('repository_language',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bytes_of_code', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'language')
    )
    with op.batch_alter_table('repository_language', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_language_language'), ['language'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_language_repository_id'), ['repository_id'], unique=False)

    op.create_table('repository_readme',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id')
    )
    with op.batch_alter_table('repository_readme', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_readme_repository_id'), ['repository_id'], unique=False)

    op.create_table('researcher_developer_account_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('researcher_id', sa.Integer(), nullable=False),
    sa.Column('developer_account_id', sa.Integer(), nullable=False),
    sa.Column('predictive_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('predictive_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('predictive_model_confidence', sa.Float(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['developer_account_id'], ['developer_account.id'], ),
    sa.ForeignKeyConstraint(['researcher_id'], ['researcher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('researcher_id', 'developer_account_id')
    )
    with op.batch_alter_table('researcher_developer_account_link', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_researcher_developer_account_link_developer_account_id'), ['developer_account_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_researcher_developer_account_link_researcher_id'), ['researcher_id'], unique=False)

    op.create_table('document_abstract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id')
    )
    with op.batch_alter_table('document_abstract', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_abstract_document_id'), ['document_id'], unique=False)

    op.create_table('document_alternate_doi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('doi', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('doi')
    )
    with op.batch_alter_table('document_alternate_doi', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_alternate_doi_document_id'), ['document_id'], unique=False)

    op.create_table('document_contributor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('researcher_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_corresponding', sa.Boolean(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['researcher_id'], ['researcher.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('researcher_id', 'document_id')
    )
    with op.batch_alter_table('document_contributor', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_contributor_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_contributor_is_corresponding'), ['is_corresponding'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_contributor_position'), ['position'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_contributor_researcher_id'), ['researcher_id'], unique=False)

    op.create_table('document_funding_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('funding_instance_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['funding_instance_id'], ['funding_instance.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'funding_instance_id')
    )
    with op.batch_alter_table('document_funding_instance', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_funding_instance_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_funding_instance_funding_instance_id'), ['funding_instance_id'], unique=False)

    op.create_table('document_repository_link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('dataset_source_id', sa.Integer(), nullable=False),
    sa.Column('predictive_model_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('predictive_model_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('predictive_model_confidence', sa.Float(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataset_source_id'], ['dataset_source.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'repository_id')
    )
    with op.batch_alter_table('document_repository_link', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_repository_link_dataset_source_id'), ['dataset_source_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_repository_link_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_repository_link_repository_id'), ['repository_id'], unique=False)

    op.create_table('document_topic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('topic_id', sa.Integer(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['topic_id'], ['topic.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_id', 'topic_id')
    )
    with op.batch_alter_table('document_topic', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_topic_document_id'), ['document_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_topic_score'), ['score'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_topic_topic_id'), ['topic_id'], unique=False)

    op.create_table('document_contributor_institution',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('document_contributor_id', sa.Integer(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['document_contributor_id'], ['document_contributor.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('document_contributor_id', 'institution_id')
    )
    with op.batch_alter_table('document_contributor_institution', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_document_contributor_institution_document_contributor_id'), ['document_contributor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_contributor_institution_institution_id'), ['institution_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('document_contributor_institution', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_contributor_institution_institution_id'))
        batch_op.drop_index(batch_op.f('ix_document_contributor_institution_document_contributor_id'))

    op.drop_table('document_contributor_institution')
    with op.batch_alter_table('document_topic', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_topic_topic_id'))
        batch_op.drop_index(batch_op.f('ix_document_topic_score'))
        batch_op.drop_index(batch_op.f('ix_document_topic_document_id'))

    op.drop_table('document_topic')
    with op.batch_alter_table('document_repository_link', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_repository_link_repository_id'))
        batch_op.drop_index(batch_op.f('ix_document_repository_link_document_id'))
        batch_op.drop_index(batch_op.f('ix_document_repository_link_dataset_source_id'))

    op.drop_table('document_repository_link')
    with op.batch_alter_table('document_funding_instance', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_funding_instance_funding_instance_id'))
        batch_op.drop_index(batch_op.f('ix_document_funding_instance_document_id'))

    op.drop_table('document_funding_instance')
    with op.batch_alter_table('document_contributor', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_contributor_researcher_id'))
        batch_op.drop_index(batch_op.f('ix_document_contributor_position'))
        batch_op.drop_index(batch_op.f('ix_document_contributor_is_corresponding'))
        batch_op.drop_index(batch_op.f('ix_document_contributor_document_id'))

    op.drop_table('document_contributor')
    with op.batch_alter_table('document_alternate_doi', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_alternate_doi_document_id'))

    op.drop_table('document_alternate_doi')
    with op.batch_alter_table('document_abstract', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_abstract_document_id'))

    op.drop_table('document_abstract')
    with op.batch_alter_table('researcher_developer_account_link', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_researcher_developer_account_link_researcher_id'))
        batch_op.drop_index(batch_op.f('ix_researcher_developer_account_link_developer_account_id'))

    op.drop_table('researcher_developer_account_link')
    with op.batch_alter_table('repository_readme', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_readme_repository_id'))

    op.drop_table('repository_readme')
    with op.batch_alter_table('repository_language', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_language_repository_id'))
        batch_op.drop_index(batch_op.f('ix_repository_language_language'))

    op.drop_table('repository_language')
    with op.batch_alter_table('repository_file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_file_repository_id'))
        batch_op.drop_index(batch_op.f('ix_repository_file_path'))

    op.drop_table('repository_file')
    with op.batch_alter_table('repository_contributor', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_contributor_repository_id'))
        batch_op.drop_index(batch_op.f('ix_repository_contributor_developer_account_id'))

    op.drop_table('repository_contributor')
    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_document_publication_date'))
        batch_op.drop_index(batch_op.f('ix_document_primary_location_id'))
        batch_op.drop_index(batch_op.f('ix_document_open_access_status'))
        batch_op.drop_index(batch_op.f('ix_document_is_open_access'))
        batch_op.drop_index(batch_op.f('ix_document_fwci'))
        batch_op.drop_index(batch_op.f('ix_document_document_type'))
        batch_op.drop_index(batch_op.f('ix_document_cited_by_count'))
        batch_op.drop_index(batch_op.f('ix_document_citation_normalized_percentile'))
        batch_op.drop_index(batch_op.f('ix_document_best_open_access_location_id'))

    op.drop_table('document')
    with op.batch_alter_table('repository', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_watchers_count'))
        batch_op.drop_index(batch_op.f('ix_repository_stargazers_count'))
        batch_op.drop_index(batch_op.f('ix_repository_primary_language'))
        batch_op.drop_index(batch_op.f('ix_repository_open_issues_count'))
        batch_op.drop_index(batch_op.f('ix_repository_license'))
        batch_op.drop_index(batch_op.f('ix_repository_last_pushed_datetime'))
        batch_op.drop_index(batch_op.f('ix_repository_is_fork'))
        batch_op.drop_index(batch_op.f('ix_repository_forks_count'))
        batch_op.drop_index(batch_op.f('ix_repository_default_branch'))
        batch_op.drop_index(batch_op.f('ix_repository_creation_datetime'))
        batch_op.drop_index(batch_op.f('ix_repository_commits_count'))
        batch_op.drop_index(batch_op.f('ix_repository_code_host_id'))

    op.drop_table('repository')
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_version'))
        batch_op.drop_index(batch_op.f('ix_location_source_id'))
        batch_op.drop_index(batch_op.f('ix_location_pdf_url'))
        batch_op.drop_index(batch_op.f('ix_location_license'))
        batch_op.drop_index(batch_op.f('ix_location_landing_page_url'))
        batch_op.drop_index(batch_op.f('ix_location_is_open_access'))

    op.drop_table('location')
    with op.batch_alter_table('funding_instance', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_funding_instance_funder_id'))
        batch_op.drop_index(batch_op.f('ix_funding_instance_award_id'))

    op.drop_table('funding_instance')
    with op.batch_alter_table('developer_account', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_developer_account_code_host_id'))

    op.drop_table('developer_account')
    with op.batch_alter_table('topic', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_topic_subfield_name'))
        batch_op.drop_index(batch_op.f('ix_topic_name'))
        batch_op.drop_index(batch_op.f('ix_topic_field_name'))
        batch_op.drop_index(batch_op.f('ix_topic_domain_name'))

    op.drop_table('topic')
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_source_source_type'))
        batch_op.drop_index(batch_op.f('ix_source_name'))
        batch_op.drop_index(batch_op.f('ix_source_host_organization_name'))

    op.drop_table('source')
    with op.batch_alter_table('researcher', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_researcher_works_count'))
        batch_op.drop_index(batch_op.f('ix_researcher_two_year_mean_citedness'))
        batch_op.drop_index(batch_op.f('ix_researcher_i10_index'))
        batch_op.drop_index(batch_op.f('ix_researcher_h_index'))
        batch_op.drop_index(batch_op.f('ix_researcher_cited_by_count'))

    op.drop_table('researcher')
    with op.batch_alter_table('institution', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_institution_name'))
        batch_op.drop_index(batch_op.f('ix_institution_institution_type'))
        batch_op.drop_index(batch_op.f('ix_institution_country_code'))

    op.drop_table('institution')
    with op.batch_alter_table('funder', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_funder_name'))

    op.drop_table('funder')
    op.drop_table('dataset_source')
    with op.batch_alter_table('code_host', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_code_host_name'))

    op.drop_table('code_host')
    # ### end Alembic commands ###
