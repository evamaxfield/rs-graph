"""Git Commit: 98e2aaf

Revision ID: 8dd9d11b82c0
Revises: a04dfe729866
Create Date: 2025-06-27 13:35:26.453720

"""
from collections.abc import Sequence

import sqlalchemy as sa
import sqlmodel
from alembic import op


# revision identifiers, used by Alembic.
revision: str = '8dd9d11b82c0'
down_revision: str | None = 'a04dfe729866'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('host_organization_open_alex_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('open_alex_id')
    )
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_source_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_source_source_type'), ['source_type'], unique=False)

    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_open_access', sa.Boolean(), nullable=False),
    sa.Column('landing_page_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pdf_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['source.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_location_is_open_access'), ['is_open_access'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_landing_page_url'), ['landing_page_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_license'), ['license'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_pdf_url'), ['pdf_url'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_source_id'), ['source_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_location_version'), ['version'], unique=False)

    op.create_table('repository_file',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tree_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('bytes_of_code', sa.Integer(), nullable=False),
    sa.Column('created_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repository.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'path')
    )
    with op.batch_alter_table('repository_file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_repository_file_path'), ['path'], unique=False)
        batch_op.create_index(batch_op.f('ix_repository_file_repository_id'), ['repository_id'], unique=False)

    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.add_column(sa.Column('citation_normalized_percentile', sa.Float(), nullable=True))
        batch_op.add_column(sa.Column('primary_location_id', sa.Integer(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_document_cited_by_percentile_year_max'))
        batch_op.drop_index(batch_op.f('ix_document_cited_by_percentile_year_min'))
        batch_op.create_index(batch_op.f('ix_document_citation_normalized_percentile'), ['citation_normalized_percentile'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_primary_location_id'), ['primary_location_id'], unique=False)
        batch_op.create_foreign_key(None, 'location', ['primary_location_id'], ['id'])
        batch_op.drop_column('cited_by_percentile_year_max')
        batch_op.drop_column('cited_by_percentile_year_min')

    with op.batch_alter_table('institution', schema=None) as batch_op:
        batch_op.add_column(sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
        batch_op.add_column(sa.Column('institution_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
        batch_op.create_index(batch_op.f('ix_institution_country_code'), ['country_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_institution_institution_type'), ['institution_type'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('institution', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_institution_institution_type'))
        batch_op.drop_index(batch_op.f('ix_institution_country_code'))
        batch_op.drop_column('institution_type')
        batch_op.drop_column('country_code')

    with op.batch_alter_table('document', schema=None) as batch_op:
        batch_op.add_column(sa.Column('cited_by_percentile_year_min', sa.INTEGER(), nullable=False))
        batch_op.add_column(sa.Column('cited_by_percentile_year_max', sa.INTEGER(), nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_index(batch_op.f('ix_document_primary_location_id'))
        batch_op.drop_index(batch_op.f('ix_document_citation_normalized_percentile'))
        batch_op.create_index(batch_op.f('ix_document_cited_by_percentile_year_min'), ['cited_by_percentile_year_min'], unique=False)
        batch_op.create_index(batch_op.f('ix_document_cited_by_percentile_year_max'), ['cited_by_percentile_year_max'], unique=False)
        batch_op.drop_column('primary_location_id')
        batch_op.drop_column('citation_normalized_percentile')

    with op.batch_alter_table('repository_file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_repository_file_repository_id'))
        batch_op.drop_index(batch_op.f('ix_repository_file_path'))

    op.drop_table('repository_file')
    with op.batch_alter_table('location', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_location_version'))
        batch_op.drop_index(batch_op.f('ix_location_source_id'))
        batch_op.drop_index(batch_op.f('ix_location_pdf_url'))
        batch_op.drop_index(batch_op.f('ix_location_license'))
        batch_op.drop_index(batch_op.f('ix_location_landing_page_url'))
        batch_op.drop_index(batch_op.f('ix_location_is_open_access'))

    op.drop_table('location')
    with op.batch_alter_table('source', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_source_source_type'))
        batch_op.drop_index(batch_op.f('ix_source_name'))

    op.drop_table('source')
    # ### end Alembic commands ###
